# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def findSecondMinimumValue(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        
        #def dfs(node):
        #    if node:
        #        unique.add(node.val)
        #        dfs(node.left)
        #        dfs(node.right)
        #        
        #unique = set()
        #dfs(root)
        #
        #min1, ans = root.val, float('inf')
        #for v in unique:
        #    if min1<v<ans:
        #        ans = v
        #return ans if ans < float('inf') else -1
        
        self.ans = float('inf')
        min1 = root.val
        
        def dfs(node):
            if node:
                if min1<node.val<self.ans:
                    self.ans = node.val
                elif node.val == min1:
                    dfs(node.left)
                    dfs(node.right)
        dfs(root)
        return self.ans if self.ans<float('inf') else -1
