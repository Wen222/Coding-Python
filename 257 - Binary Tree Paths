# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        
        res, path = [], []
        self.recu(root,path,res)
        return res
    
    def recu(self, node, path, res):
        if node is None:
            return
        
        if node.left is node.right is None:
            ans = ""
            for n in path:
                ans += str(n.val) + "->"
            res.append(ans + str(node.val))
            
        if node.left:
            path.append(node)
            self.recu(node.left,path,res)
            path.pop()
            
        if node.right:
            path.append(node)
            self.recu(node.right,path,res)
            path.pop()
