class Solution(object):
    def findUnsortedSubarray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        # S1
        #n = len(nums)
        #left, right = -1, -2
        #max_left,min_right = nums[0],nums[-1]
        #for i in range(n):
        #    max_left = max(max_left, nums[i])
        #    min_right = min(min_right, nums[n-1-i])
        #    if nums[i] < max_left:
        #        right = i
        #    if nums[n-1-i] > min_right:
        #        left = n-1-i
        #return right-left+1
    
    
        # S2
        copy = sorted(nums)
        left, right = 0, len(nums)-1
        while nums[left]==copy[left] or nums[right]==copy[right]:
            if right - left <= 1:
                return 0
            if nums[left]==copy[left]:
                left += 1
            if nums[right]==copy[right]:
                right -= 1
        return right-left+1
