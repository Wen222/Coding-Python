class Solution(object):
    def maximumProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums)<3:
            return None
        
        nums = sorted(nums)
        L = len(nums)
        return max(nums[0]*nums[1]*nums[-1],nums[L-1]*nums[L-2]*nums[L-3])
        
        
# Solution 2
class Solution(object):
    def maximumProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        max1,max2,max3=float('-Inf'),float('-Inf'),float('-Inf')
        min1,min2=float('Inf'),float('Inf')
        
        for n in nums:
            if n <= min1:
                min2 = min1
                min1 = n
            elif n <= min2:
                min2 = n
            
            if n >= max1:
                max3 = max2
                max2 = max1
                max1 = n
            elif n >= max2:
                max3 = max2
                max2 = n
            elif n >= max3:
                max3 = n
        
        return max(min1*min2*max1,max1*max2*max3)
