# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        # iterative
        #prev = None
        #curr = head
        
        #while curr is not None:
            
        #    nextnode = curr.next
        #    curr.next = prev
        #    prev = curr
        #   curr = nextnode
        
        #return prev
            
            
        # recursive
        if head is None or head.next is None:
            return head
        
        p = self.reverseList(head.next)
        head.next.next = head
        head.next = None
        return p
